// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/generate_tokens": {
            "post": {
                "description": "Generate access_token and refresh_token",
                "summary": "Generate Tokens",
                "parameters": [
                    {
                        "description": "guid",
                        "name": "json-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GenerateTokensRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "$ref": "#/definitions/types.TokensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/refresh_tokens": {
            "post": {
                "description": "Refresh access_token and refresh_token",
                "summary": "Refresh Tokens",
                "parameters": [
                    {
                        "description": "guid and refresh_token",
                        "name": "json-body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RefreshTokensRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "access_token with Bearer",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token",
                        "schema": {
                            "$ref": "#/definitions/types.TokensResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/pkg.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "pkg.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "internal error"
                }
            }
        },
        "types.GenerateTokensRequest": {
            "type": "object",
            "properties": {
                "guid": {
                    "type": "string",
                    "example": "e8207e59-127e-4557-bd66-6c43c427c109"
                }
            }
        },
        "types.RefreshTokensRequest": {
            "type": "object",
            "properties": {
                "guid": {
                    "type": "string",
                    "example": "e8207e59-127e-4557-bd66-6c43c427c109"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "refresh_token"
                }
            }
        },
        "types.TokensResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "access_token"
                },
                "refresh_token": {
                    "type": "string",
                    "example": "refresh_token"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Auth Service",
	Description:      "Test task for medods.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
